{"version":3,"sources":["admin/node_modules/browser-pack/_prelude.js","admin/src/js/admin/the-paste/index.js","admin/src/js/lib/compat.js","admin/src/js/lib/converter.js","admin/src/js/lib/filename.js","admin/src/js/lib/image-dialog.js","admin/src/js/lib/image-list.js","admin/src/js/lib/mime.js"],"names":[],"mappings":"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","file":"the-paste.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Converter from 'converter'\r\nimport imageDialog from 'image-dialog'\r\nimport { rml } from 'compat'\r\nlet uploader\r\n\r\nconst handleFiles = files => {\r\n\tconst images = []\r\n\tfiles.forEach( file => {\r\n\t\tif ( /^image\\//.test( file.type ) ) {\r\n\t\t\timages.push(file)\r\n\t\t\t// uploader.addFile( file )\r\n\t\t} else {\r\n\t\t\tuploader.addFile( rml.file(file) )\r\n\t\t}\r\n\t} )\r\n\tif ( images.length ) {\r\n\t\timageDialog( images )\r\n\t\t\t.then( files => files.forEach( file => uploader.addFile( rml.file(file) ) ) )\r\n\t}\r\n};\r\n\r\n\r\ndocument.addEventListener( 'paste', async e => {\r\n\r\n\tif ( document.body.matches('.the-paste-modal-open') ) {\r\n\t\treturn\r\n\t}\r\n\r\n\tif ( ! uploader ) {\r\n\t\treturn\r\n\t}\r\n\r\n\tconst files = Array.from( e.clipboardData.files )\r\n\tfiles.push( ... await Converter.clipboardItemsToFiles( e.clipboardData.items ) )\r\n\r\n\tif ( files.length ) {\r\n\t\treturn handleFiles( files )\r\n\t}\r\n\r\n}, { capture: true } )\r\n\r\n\r\n// Show paste notice in media library\r\nconst PasteInstructions = wp.media.View.extend({\r\n\ttemplate: wp.template('the-paste-instructions'),\r\n\tclassName: 'the-paste-instructions',\r\n\trender: function() {\r\n\t\twp.media.View.prototype.render.apply(this,arguments);\r\n\t\tsetInterval( () => {\r\n\t\t\tthis.$el.prop('hidden', ! document.hasFocus() )\r\n\t\t}, 100 )\r\n\t}\r\n})\r\n\r\n_.extend( wp.media.view.MediaFrame.prototype, {\r\n\t_parentInitialize:\twp.media.view.MediaFrame.prototype.initialize,\r\n\tinitialize: function(title) {\r\n\t\tthis._parentInitialize.apply(this,arguments);\r\n\t\tthis.on( 'attach', this.addPasteInstructions, this );\r\n\t\tthis.pasteInstructions = new PasteInstructions()\r\n\t\tthis.pasteInstructions.render()\r\n\t},\r\n\taddPasteInstructions: function() {\r\n\t\tthis.$el.find('#media-frame-title').append(this.pasteInstructions.el)\r\n\t}\r\n})\r\n\r\n// set uploader global var\r\n_.extend( wp.media.view.AttachmentsBrowser.prototype, {\r\n\t_parentInitialize:\twp.media.view.AttachmentsBrowser.prototype.initialize,\r\n\tinitialize:\tfunction() {\r\n\t\tthis._parentInitialize.apply(this,arguments);\r\n\r\n\t\tconst pasteInstructions = new PasteInstructions({\r\n\t\t\tpriority : -10,\r\n\t\t})\r\n\t\tpasteInstructions.render()\r\n\t\tthis.toolbar.set( 'pasteInstructions', pasteInstructions );\r\n\r\n\t\tif ( !! this.controller.uploader.uploader ) {\r\n\t\t\tuploader = this.controller.uploader.uploader.uploader\r\n\t\t} else {\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tuploader = this.controller.uploader.uploader.uploader\r\n\t\t\t}, 50 )\r\n\t\t}\r\n\t}\r\n})\r\n","// Compatibility with [Real Media Library](https://wordpress.org/plugins/real-media-library-lite/)\r\n// @see https://github.com/mcguffin/the-paste/issues/47\r\n\r\nclass Supports {\r\n\tget svg() {\r\n\t\treturn _wpPluploadSettings.defaults.filters.mime_types[0].extensions.split(',').includes('svg')\r\n\t}\r\n\tget webp() {\r\n\t\treturn document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0\r\n\t}\r\n}\r\n\r\nconst rml = {\r\n\tfile: file => {\r\n\t\tif ( ! file.getSource ) {\r\n\t\t\t// return native file object\r\n\t\t\t// mimic mOxie.Blob.getSource()\r\n\t\t\tfile.getSource = () => {\r\n\t\t\t\treturn file\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn file\r\n\t}\r\n}\r\n\r\nconst supports = new Supports()\r\n\r\nmodule.exports = { rml, supports }\r\n","import { supports } from 'compat'\r\nimport { safeFilename } from 'filename'\r\n\r\n\r\nconst itemHandler = type => {\r\n\treturn {\r\n\t\t'text/plain': async item => {\r\n\t\t\tif ( supports.svg ) {\r\n\t\t\t\tconst str = await Converter.itemToString( item )\r\n\t\t\t\tif ( str.indexOf('<svg') >= 0 ) {\r\n\t\t\t\t\tconst domParser = new DOMParser()\r\n\t\t\t\t\tif ( domParser.parseFromString(str,'image/svg+xml').querySelector('svg') ) {\r\n\t\t\t\t\t\treturn [ Converter.stringToFile( str, 'image/svg+xml' ) ]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn []\r\n\t\t},\r\n\t\t'text/html': async item => {\r\n\t\t\tconst div = document.createElement('div')\r\n\t\t\tdiv.innerHTML = await Converter.itemToString( item )\r\n\r\n\t\t\tconst imgs = Array.from( div.querySelectorAll('img') ).map( img => Converter.elementToFile(img) )\r\n\t\t\treturn new Promise( (resolve,reject) => {\r\n\t\t\t\tPromise.allSettled( imgs ).then( result => resolve( Array.from(result).map( promise => promise.value )) )\r\n\t\t\t})\r\n\t\t},\r\n\t\t'application/x-vnd.google-docs-image-clip+wrapped': async item => await Converter.gdocsItemToFiles( item ),\r\n\t}[type]??(()=>new Promise((resolve,reject)=>resolve([])))\r\n}\r\n\r\nconst Converter = {\r\n\tclipboardItemsToFiles: clipboardItems => {\r\n\t\tconst files = []\r\n\t\treturn new Promise((resolve,reject) => {\r\n\t\t\tconst promises = Array.from(clipboardItems).map( item => {\r\n\t\t\t\tif ( 'string' === item.kind ) {\r\n\t\t\t\t\tconst handler = itemHandler(item.type)\r\n\t\t\t\t\treturn handler( item )\r\n\t\t\t\t\t\t.then( f => {\r\n\t\t\t\t\t\t\tfiles.push( ...f )\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t.catch( err => {\r\n\t\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tPromise.allSettled(promises).then( () => resolve(files))\r\n\t\t})\r\n\t},\r\n\tclipboardItemsToHtml:  async clipboardItems => {\r\n\t\tlet i, item\r\n\t\tfor ( i=0; i < clipboardItems.length; i++ ) {\r\n\t\t\titem = clipboardItems[i]\r\n\t\t\tif ( 'string' === item.kind && 'text/html' === item.type ) {\r\n\t\t\t\treturn await Converter.itemToString( item )\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t},\r\n\tgdocsItemToSources: async item => new Promise( (resolve, reject) => {\r\n\t\titem.getAsString( async str => {\r\n\t\t\tconst src = Object.values(JSON.parse(JSON.parse( str ).data ).image_urls )\r\n\t\t\tresolve(src)\r\n\t\t} )\r\n\t}),\r\n\tgdocsItemToFiles: async item => {\r\n\t\tconst sources = await Converter.gdocsItemToSources(item)\r\n\t\tconst files = []\r\n\t\tfor ( i=0;i<sources.length; i++ ) {\r\n\t\t\tfiles.push( await Converter.blobUrlToFile(sources[i]) )\r\n\t\t}\r\n\t\treturn files\r\n\t},\r\n\titemToString: async item => new Promise( (resolve, reject) => {\r\n\t\titem.getAsString( str => resolve(str) )\r\n\t}),\r\n\r\n\telementToFile: async el => {\r\n\t\tconst file = await Converter.urlToFile(el.src,el.alt)\r\n\t\treturn file\r\n\t},\r\n\r\n\turlToFile: async ( url, filename = '') => {\r\n\t\tlet file\r\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\r\n\t\tif ( 'data' === schema ) {\r\n\t\t\tfile = Converter.dataUrlToFile( url, filename )\r\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\r\n\t\t\tfile = await Converter.blobUrlToFile( url, filename )\r\n\t\t}\r\n\t\treturn file\r\n\t},\r\n\turlToMime: async url => {\r\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\r\n\t\tlet mime\r\n\t\tif ( 'data' === schema ) {\r\n\t\t\tmime = Converter.dataUrlToMime( url )\r\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\r\n\t\t\tmime = await Converter.blobUrlToMime( url )\r\n\t\t}\r\n\t\treturn mime\r\n\t},\r\n\turlToType: async url => {\r\n\t\tconst mime = await Converter.urlToMime(url)\r\n\t\treturn mime.substr( 0, mime.indexOf('/'))\r\n\t},\r\n\turlToBlobUrl: async (url) => {\r\n\t\tconst file = await Converter.blobUrlToFile( url )\r\n\t\treturn Converter.fileToBlobUrl( file )\r\n\t},\r\n\r\n\tstringToFile: (str, type) => {\r\n\t\treturn Converter.blobToFile( new Blob( [str], {type} ) )\r\n\t},\r\n\r\n\tblobToFile: ( blob, filename = '' ) => {\r\n\t\treturn new File([blob], safeFilename( blob, filename ), { type: blob.type } );\r\n\t},\r\n\tblobUrlToMime: async blobUrl =>{\r\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\r\n\t\treturn blob.type\r\n\t},\r\n\tblobUrlToType: async blobUrl => {\r\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\r\n\t\treturn blob.type.substr(0,blob.type.indexOf('/'))\r\n\t},\r\n\tblobUrlToBlob: async ( blobUrl, filename = '' ) => {\r\n\t\tconst blob = await fetch(blobUrl).then( r => r.blob() );\r\n\t\treturn blob\r\n\t},\r\n\tblobUrlToFile: async ( blobUrl, filename = '' ) => {\r\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\r\n\t\treturn Converter.blobToFile( blob, filename )\r\n\t},\r\n\tblobUrlToDataUrl: async blobUrl => {\r\n\t\tconst blob = await fetch(blobUrl).then( r => r.blob() );\r\n\t\tconst dataurl = await Converter.fileToDataUrl(blob)\r\n\t\treturn dataurl\r\n\t},\r\n\r\n\r\n\tdataUrlToMime: dataurl => dataurl.match('data:([^;]+);')[1],\r\n\r\n\tdataUrlToType: dataurl => dataurl.match('data:([^\\/]+)\\/')[1],\r\n\r\n\tdataUrlToBlob: ( dataurl ) => {\r\n\t\tlet arr = dataurl.split(','),\r\n\t\t\ttype = arr[0].match(/:(.*?);/)[1],\r\n\t\t\tbstr = atob(arr[1]),\r\n\t\t\tn = bstr.length,\r\n\t\t\tu8arr = new Uint8Array(n);\r\n\r\n\t\twhile(n--){\r\n\t\t\tu8arr[n] = bstr.charCodeAt(n);\r\n\t\t}\r\n\t\treturn new Blob( [u8arr], { type: type } )\r\n\t},\r\n\r\n\tdataUrlToFile: ( dataurl, filename = '' ) => Converter.blobToFile( Converter.dataUrlToBlob(dataurl), filename ),\r\n\r\n\tdataUrlToBlobUrl: dataurl => Converter.fileToBlobUrl( Converter.dataUrlToBlob( dataurl ) ),\r\n\r\n\tfileToBlobUrl: file => URL.createObjectURL(file),\r\n\r\n\tfileToDataUrl: file => new Promise( ( resolve, reject ) => {\r\n\t\tconst fr = new FileReader()\r\n\t\tfr.addEventListener('load', () => resolve( fr.result )  )\r\n\t\tfr.readAsDataURL( file )\r\n\t}),\r\n}\r\n\r\nmodule.exports = Converter\r\n","import mime from 'mime'\r\n\r\n/**\r\n *\tGenerate a filename\r\n */\r\nconst generateFilename = suffix => {\r\n\r\n\tconst zerofill = (n,len = 2) => {\r\n\t\treturn ('00' + n.toString()).substr(-len)\r\n\t}\r\n\r\n\tlet name = thepaste.options.default_filename\r\n\r\n\tconst now = new Date(),\r\n\t\tpostname = document.querySelector('#post [name=\"post_title\"]#title')?.value\r\n\t\t\t|| document.querySelector('.wp-block-post-title')?.textContent\r\n\t\t\t|| document.querySelector('h1')?.textContent,\r\n\t\treplace_values = thepaste.options.filename_values,\r\n\t\t// username = document.querySelector('.display-name')?.textContent,\r\n\t\tmap = [\r\n\t\t\t{ s: '%Y', r: now.getFullYear() },\r\n\t\t\t{ s: '%y', r: now.getFullYear() % 100 },\r\n\t\t\t{ s: '%m', r: zerofill(now.getMonth() + 1) },\r\n\t\t\t{ s: '%d', r: zerofill(now.getDate()) },\r\n\t\t\t{ s: '%e', r: now.getDate() },\r\n\t\t\t{ s: '%H', r: zerofill(now.getHours()) },\r\n\t\t\t{ s: '%I', r: zerofill(now.getHours() % 12 ) },\r\n\t\t\t{ s: '%M', r: zerofill(now.getMinutes()) },\r\n\t\t\t{ s: '%S', r: zerofill(now.getSeconds()) },\r\n\t\t\t{ s: '%s', r: Math.floor( now.getTime() / 1000 ) },\r\n\t\t\t{ s: '%x', r: now.toLocaleDateString() },\r\n\t\t\t{ s: '%X', r: now.toLocaleTimeString() }\r\n\t\t];\r\n\tif ( 'undefined' !== typeof postname ) {\r\n\t\tmap.push( { s: '<postname>', r: postname } );\r\n\t} else {\r\n\t\tmap.push( { s: '<postname>', r: '' } );\r\n\t}\r\n\tObject.keys( replace_values ).forEach( k => {\r\n\t\tif ( !! replace_values[k] ) {\r\n\t\t\tmap.push( { s: `<${k}>`, r: replace_values[k] } );\r\n\t\t} else {\r\n\t\t\tmap.push( { s: `<${k}>`, r: '' } );\r\n\t\t}\r\n\t})\r\n\tmap.forEach(function(el){\r\n\t\tname = name.replace( el.s, el.r )\r\n\t})\r\n\tif ( 'string' === typeof suffix) {\r\n\t\tname += '.' + suffix;\r\n\t}\r\n\treturn name;\r\n}\r\nconst safeFilename = ( file, filename = '' ) => {\r\n\tlet type = file.type\r\n\r\n\tconst suffix = mime.extension(type)\r\n\tfilename = filename.replace(/[^\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\p{Zs}]/ug,'-').trim()\r\n\tif ( ! filename ) {\r\n\t\tfilename = generateFilename( suffix )\r\n\t}\r\n\tif ( suffix !== filename.split('.').pop() ) {\r\n\t\tfilename += `.${suffix}`\r\n\t}\r\n\treturn filename\r\n}\r\n\r\nmodule.exports = { generateFilename, safeFilename }\r\n","import $ from 'jquery'\r\nimport ImageList from 'image-list'\r\n\r\nconst imageDialog = images => {\r\n\treturn new Promise( (resolve,reject) => {\r\n\t\tconst modal = new wp.media.view.Modal( {\r\n\t\t\tevents: {\r\n\t\t\t\t'keydown': function(e) {\r\n\t\t\t\t\tif ( e.key === 'Enter' ) {\r\n\t\t\t\t\t\tlist.submit()\r\n\t\t\t\t\t} else if ( e.key === 'Escape' ) {\r\n\t\t\t\t\t\tmodal.close()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontroller : {\r\n\t\t\t\ttrigger: () => {},\r\n\t\t\t},\r\n\t\t\ttitle      : thepaste.l10n.the_paste\r\n\t\t} );\r\n\t\tconst list = new ImageList( { files: images, controller: modal })\r\n\t\tconst isModal = $('body').is('.modal-open')\r\n\t\tlist.on( 'thepaste:submit', async () => {\r\n\t\t\tconst files = await list.getFiles()\r\n\t\t\tmodal.remove()\r\n\t\t\t$('body').toggleClass( 'the-paste-modal-open', false ) // block editor\r\n\t\t\t$('body').toggleClass( 'modal-open', isModal ) // restore preious modal state\r\n\t\t\tresolve( files )\r\n\t\t})\r\n\t\tmodal.content( list );\r\n\t\tmodal.open();\r\n\t\tmodal.on('close', () => {\r\n\t\t\t$('body').toggleClass( 'the-paste-modal-open', false )\r\n\t\t\t$('body').toggleClass( 'modal-open', isModal )\r\n\t\t\tsetTimeout( () => modal.remove(), 10 )\r\n\t\t})\r\n\t\t$('body').toggleClass( 'the-paste-modal-open', true )\r\n\t})\r\n}\r\n\r\nmodule.exports = imageDialog\r\n","import Converter from 'converter'\r\nimport mime from 'mime'\r\nimport { supports } from 'compat'\r\nimport { generateFilename } from 'filename'\r\n\r\nconst ImageListItem = wp.media.View.extend({\r\n\ttagName:'form',\r\n\ttemplate: wp.template('the-paste-image-list-item'),\r\n\tclassName: 'the-paste-image-list-item',\r\n\tevents: {\r\n\t\t'click [name=\"discard\"]': 'discard',\r\n\t},\r\n\tinitialize : function( { file } ) {\r\n\t\twp.media.View.prototype.initialize.apply( this, arguments );\r\n\t\tthis.file = file\r\n\t\tnew Promise( (resolve,reject) => {\r\n\t\t\tconst rawImage = new Image();\r\n\t\t\trawImage.addEventListener(\"load\", function () {\r\n\t\t\t\tresolve(rawImage);\r\n\t\t\t});\r\n\t\t\trawImage.src = Converter.fileToBlobUrl(file);\r\n\t\t})\r\n\t\t.then( rawImage => {\r\n\t\t\tlet hasSize = rawImage.width && rawImage.height\r\n\t\t\tthis.canvas = this.$('canvas').get(0)\r\n\r\n\t\t\tif ( 'image/svg+xml' === this.file.type ) {\r\n\t\t\t\t// append image to DOM to get actual size\r\n\t\t\t\tif ( hasSize ) {\r\n\t\t\t\t\tdocument.body.append(rawImage)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.canvas.after(rawImage)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// draw canvas\r\n\t\t\tthis.canvas.width = rawImage.width;\r\n\t\t\tthis.canvas.height = rawImage.height;\r\n\t\t\tthis.canvas.getContext(\"2d\").drawImage(rawImage, 0, 0);\r\n\r\n\t\t\tif ( 'image/svg+xml' === this.file.type ) {\r\n\t\t\t\tif ( hasSize ) {\r\n\t\t\t\t\trawImage.remove()\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// no known size: svg only\r\n\t\t\t\t\tthis.$(`[data-format]:not([data-format=\"image/svg+xml\"])`).remove()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\trender: function() {\r\n\t\twp.media.View.prototype.render.apply(this,arguments);\r\n\r\n\t\tconst type     = this.file.type\r\n\t\tconst basename = this.file.name.replace(/\\.([^\\.]*)$/,'')\r\n\r\n\t\tif ( ! supports.webp ) {\r\n\t\t\tif ( 'image/webp' !== type ) {\r\n\t\t\t\tthis.$(`[data-format=\"image/webp\"]`).remove()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.$(`[name=\"the-paste-format\"][value=\"${type}\"]`).prop('checked', true )\r\n\t\tthis.$('[name=\"the-paste-filename\"]').val( basename )\r\n\t\tthis.$('[name=\"the-paste-filename\"]').prop( 'placeholder', generateFilename() )\r\n\r\n\t\tif ( ! supports.svg || 'image/svg+xml' !== type ) {\r\n\t\t\tthis.$(`[data-format=\"image/svg+xml\"]`).remove()\r\n\t\t\tif ( 'image/svg+xml' === type ) {\r\n\t\t\t\tthis.$(`[name=\"the-paste-format\"][value=\"image/png\"]`).prop('checked',true)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetFile: function() {\r\n\t\tconst type = this.$('[name=\"the-paste-format\"]:checked').val()\r\n\t\tconst name = this.$('[name=\"the-paste-filename\"]').val() || generateFilename()\r\n\t\tconst filename = `${name}.${mime.extension(type)}`\r\n\t\t// upload as-is\r\n\t\tif ( this.file.type === type ) {\r\n\t\t\treturn new Promise((resolve,reject) => {\r\n\t\t\t\tresolve( new File( [this.file], filename, { type } ) )\r\n\t\t\t})\r\n\t\t}\r\n\t\t// type conversion\r\n\t\treturn new Promise((resolve,reject) => {\r\n\t\t\tthis.canvas.toBlob( blob => {\r\n\t\t\t\tresolve( Converter.blobToFile( blob, filename ) )\r\n\t\t\t}, type, thepaste.options.jpeg_quality * 0.01 )\r\n\t\t})\r\n\t},\r\n\tdiscard: function() {\r\n\t\tthis.controller.discardItem(this)\r\n\t}\r\n})\r\n\r\nconst ImageList = wp.media.View.extend({\r\n\ttemplate: wp.template('the-paste-image-list'),\r\n\tclassName: 'the-paste-image-list',\r\n\tevents: {\r\n\t\t'click .media-frame-toolbar button': 'submit',\r\n\t},\r\n\tinitialize : function( { files } ) {\r\n\t\twp.media.View.prototype.initialize.apply( this, arguments );\r\n\t\tthis.files = files\r\n\t\tthis.items = []\r\n\t\tthis.button = new wp.media.view.Button({\r\n\t\t\tclassName: 'button-primary button-hero',\r\n\t\t})\r\n\t},\r\n\trender: function() {\r\n\t\twp.media.View.prototype.render.apply(this,arguments);\r\n\t\tthis.files.forEach( file => {\r\n\t\t\tconst item = new ImageListItem({file,controller:this})\r\n\t\t\titem.render()\r\n\t\t\tthis.$('.content').append(item.$el)\r\n\t\t\tthis.items.push( item )\r\n\t\t\titem.render()\r\n\t\t} )\r\n\t},\r\n\tdiscardItem:function(item) {\r\n\t\tthis.files = this.files.filter( file => file !== item.file )\r\n\t\tthis.items = this.items.filter( it => it !== item )\r\n\t\titem.$el.remove()\r\n\t\tif ( ! this.items.length ) {\r\n\t\t\tthis.controller.close()\r\n\t\t}\r\n\t},\r\n\tgetFiles: async function() {\r\n\t\tconst files = []\r\n\t\tfor ( const item of this.items ) {\r\n\t\t\tfiles.push( await item.getFile() )\r\n\t\t}\r\n\t\treturn files\r\n\t},\r\n\tsubmit: function() {\r\n\t\tthis.trigger('thepaste:submit')\r\n\t},\r\n})\r\n\r\n\r\nmodule.exports = ImageList\r\n","const exts  = Object.keys( thepaste.options.mime_types )\r\nconst types = Object.values( thepaste.options.mime_types )\r\n\r\n// windows\r\nexts.push('zip')\r\ntypes.push('application/x-zip-compressed')\r\n\r\nmodule.exports = {\r\n\textension: type => {\r\n\t\tconst idx = types.indexOf( type )\r\n\t\treturn -1 !== idx ? exts[idx] : false\r\n\t},\r\n\ttype: ext => {\r\n\t\tconst idx = exts.indexOf( ext )\r\n\t\treturn -1 !== idx ? types[idx] : false\r\n\t}\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}